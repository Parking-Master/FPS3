(()=>{const{FileLoader:e,Loader:t,ShapePath:s}=THREE;class n{constructor(e){this.isFont=!0,this.type="Font",this.data=e}generateShapes(e,t=100){const s=[],n=function(e,t,s){const n=Array.from(e),a=t/s.resolution,r=(s.boundingBox.yMax-s.boundingBox.yMin+s.underlineThickness)*a,i=[];let c=0,h=0;for(let e=0;e<n.length;e++){const t=n[e];if("\n"===t)c=0,h-=r;else{const e=o(t,a,c,h,s);c+=e.offsetX,i.push(e.path)}}return i}(e,t,this.data);for(let e=0,t=n.length;e<t;e++)s.push(...n[e].toShapes());return s}}function o(e,t,n,o,a){const r=a.glyphs[e]||a.glyphs["?"];if(!r)return void console.error('THREE.Font: character "'+e+'" does not exists in font family '+a.familyName+".");const i=new s;let c,h,l,u,d,f,p,g;if(r.o){const e=r._cachedOutline||(r._cachedOutline=r.o.split(" "));for(let s=0,a=e.length;s<a;){switch(e[s++]){case"m":c=e[s++]*t+n,h=e[s++]*t+o,i.moveTo(c,h);break;case"l":c=e[s++]*t+n,h=e[s++]*t+o,i.lineTo(c,h);break;case"q":l=e[s++]*t+n,u=e[s++]*t+o,d=e[s++]*t+n,f=e[s++]*t+o,i.quadraticCurveTo(d,f,l,u);break;case"b":l=e[s++]*t+n,u=e[s++]*t+o,d=e[s++]*t+n,f=e[s++]*t+o,p=e[s++]*t+n,g=e[s++]*t+o,i.bezierCurveTo(d,f,p,g,l,u)}}}return{offsetX:r.ha*t,path:i}}THREE.FontLoader=class extends t{constructor(e){super(e)}load(t,s,n,o){const a=this,r=new e(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(t,(function(e){const t=a.parse(JSON.parse(e));s&&s(t)}),n,o)}parse(e){return new n(e)}},THREE.Font=n})();