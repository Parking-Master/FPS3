THREE.TouchControls = function(camera, element) {
  this.action = null;
  this.speed = 1;
  let previousTouch = null;
  element.addEventListener("touchmove", (event) => {
    let touch = event.touches[0];
    Object.values(event.touches).forEach(x => x.target == element && (console.log(x), touch = x));
    camera.rotation.order = "YXZ";
    if (previousTouch && (Math.PI / 2).toFixed(12) - 0 != Math.abs(camera.rotation.x.toFixed(12) - 0)) {
      camera.rotation.y -= (touch.pageX - previousTouch.pageX) / (500 / this.speed);
      camera.rotation.x -= (touch.pageY - previousTouch.pageY) / (500 / this.speed);
    }
    previousTouch = touch;
  });
  element.addEventListener("touchstart", (event) => {
    if (event.touches[1]) {
      this.action("hand", {
        type: "negative"
      });
    } else {
      if (typeof this.action == "function") {
        this.action("hand", {
          type: "positive"
        });
      }
    }
  });
  element.addEventListener("touchend", (event) => {
    previousTouch = null;
  });
};